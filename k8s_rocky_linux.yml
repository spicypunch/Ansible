---
- name: k8s Setting
  hosts: k8s
  gather_facts: no
  become: True
  tasks:
    - name: add hosts
      lineinfile:
        path: /etc/hosts
        insertafter: 'localhost6.localdomain6'
        line: |
          192.168.0.40 m-k8s-log1
          192.168.0.43 w1-k8s-log2
          192.168.0.44 w2-k8s-log3

    - name: stop firewalld
      shell: |
        systemctl stop firewalld
        systemctl disable firewalld

    - name: disable selinux
      shell: setenforce 0

    - name: disable selinux
      replace:
        path: /etc/sysconfig/selinux
        regexp: "SELINUX=enforcing"
        replace: "SELINUX=disabled"

    - name: enable br_netfilter
      shell: |
        modprobe br_netfilter
        echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
        modprobe br_netfilter

    - name: swappiness
      shell: |
        swapoff -a

    - name: set swap
      replace:
        path: /etc/fstab
        regexp: "/dev/mapper/rl-swap"
        replace: "#/dev/mapper/rl-swap"

    - name: set swap2
      lineinfile:
        path: /etc/sysctl.conf
        line: net.ipv4.ip_forward = 1

    - name: install docker
      yum:
        name:
          - yum-utils
          - epel-release
          - vim-enhanced
          - git
          - nfs-utils
        state: present

    - name: install docker2
      shell: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

    - name: install docker3
      yum:
        name:
          - docker-ce-19.03.13-3.el8
          - docker-ce-cli-19.03.13-3.el8
          - containerd.io-1.5.11-3.1.el8
        state: present

    - name: docker restart and set enable
      shell: systemctl enable --now docker

    - name: make k8s.conf
      file:
        path: /etc/sysctl.d/k8s.conf
        state: touch
        owner: root
        group: root
        mode: 0644

    - name: k8s.conf
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1

    - name: make kubernetes.repo
      file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch
        owner: root
        group: root
        mode: 0644

    - name: k8s.conf
      lineinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        line: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=0
          repo_gpgcheck=0
          gpgkey=https://${gg_pkg}/yum-key.gpg https://${gg_pkg}/rpm-package-key.gpg

    - name: install k8s
      yum:
        name:
          - kubectl-1.18.4
          - kubelet-1.18.4
          - kubeadm-1.18.4
        state: present

    - name: enable kubelet
      shell: systemctl enable --now  kubelet

- name: k8s Master Setting
  hosts: master
  gather_facts: no
  become: True
  tasks:
    - name: install Cluster
      shell: kubeadm init --token 123456.1234567890123456 --token-ttl 0 --pod-network-cidr=172.16.0.0/16 --apiserver-advertise-address=192.168.0.40

    - name: make .kube directory
      file:
        path: /root/.kube
        state: directory
        owner: root
        group: root
        mode: 0644

    - name: copy admin.conf
      shell: cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && chown $(id -u):$(id -g) $HOME/.kube/config

    - name: insert ~/.bash_profile
      lineinfile:
        path: ~/.bash_profile
        line: export KUBECONFIG=/etc/kubernetes/admin.conf

    - name: source ~/.bash_profile
      shell: source ~/.bash_profile

    - name: applu 172.16_net_calico.yaml
      shell: kubectl apply -f /kubernetes/kubernetes_cluster/172.16_net_calico.yaml

    - name: install bash-completion
      yum: name=bash-completion state=present

    - name: completion bash
      shell: kubectl completion bash >/etc/bash_completion.d/kubectl

    - name: alias kubectl to k
      shell: echo 'alias k=kubectl' >> ~/.bashrc && echo 'complete -F __start_kubectl k' >> ~/.bashrc

- name: k8s Nodes Setting
  hosts: nodes
  gather_facts: no
  become: True
  tasks:
    - name: kubeadm join
      shell: kubeadm join --token 123456.1234567890123456 --discovery-token-unsafe-skip-ca-verification 192.168.0.40:6443

